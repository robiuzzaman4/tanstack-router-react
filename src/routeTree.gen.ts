/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as dashboardDashboardRouteRouteImport } from './routes/(dashboard)/dashboard/route'
import { Route as dashboardDashboardIndexRouteImport } from './routes/(dashboard)/dashboard/index'
import { Route as dashboardDashboardUsersRouteImport } from './routes/(dashboard)/dashboard/users'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardDashboardRouteRoute = dashboardDashboardRouteRouteImport.update({
  id: '/(dashboard)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardDashboardIndexRoute = dashboardDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardDashboardRouteRoute,
} as any)
const dashboardDashboardUsersRoute = dashboardDashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => dashboardDashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof dashboardDashboardRouteRouteWithChildren
  '/dashboard/users': typeof dashboardDashboardUsersRoute
  '/dashboard/': typeof dashboardDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/users': typeof dashboardDashboardUsersRoute
  '/dashboard': typeof dashboardDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(dashboard)/dashboard': typeof dashboardDashboardRouteRouteWithChildren
  '/(dashboard)/dashboard/users': typeof dashboardDashboardUsersRoute
  '/(dashboard)/dashboard/': typeof dashboardDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/dashboard/users' | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard/users' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/(dashboard)/dashboard'
    | '/(dashboard)/dashboard/users'
    | '/(dashboard)/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  dashboardDashboardRouteRoute: typeof dashboardDashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/dashboard': {
      id: '/(dashboard)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof dashboardDashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/dashboard/': {
      id: '/(dashboard)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof dashboardDashboardIndexRouteImport
      parentRoute: typeof dashboardDashboardRouteRoute
    }
    '/(dashboard)/dashboard/users': {
      id: '/(dashboard)/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof dashboardDashboardUsersRouteImport
      parentRoute: typeof dashboardDashboardRouteRoute
    }
  }
}

interface dashboardDashboardRouteRouteChildren {
  dashboardDashboardUsersRoute: typeof dashboardDashboardUsersRoute
  dashboardDashboardIndexRoute: typeof dashboardDashboardIndexRoute
}

const dashboardDashboardRouteRouteChildren: dashboardDashboardRouteRouteChildren =
  {
    dashboardDashboardUsersRoute: dashboardDashboardUsersRoute,
    dashboardDashboardIndexRoute: dashboardDashboardIndexRoute,
  }

const dashboardDashboardRouteRouteWithChildren =
  dashboardDashboardRouteRoute._addFileChildren(
    dashboardDashboardRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  dashboardDashboardRouteRoute: dashboardDashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
